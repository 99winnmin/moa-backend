# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Copy Prod
      env:
          OCCUPY_PROD: ${{ secrets.OCCUPY_PROD }}
          OCCUPY_PROD_DIR: src/main/resources
          # OCCUPY_PROD_TEST_DIR: src/test/resources
          OCCUPY_PROD_DIR_FILE_NAME: application-prod.yml
      run: echo $OCCUPY_PROD | base64 --decode > $OCCUPY_PROD_DIR/$OCCUPY_PROD_DIR_FILE_NAME
           # echo $OCCUPY_PROD | base64 --decode > $OCCUPY_PROD_TEST_DIR/$OCCUPY_PROD_DIR_FILE_NAME
        
    - name: Copy Secret
      env:
          OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
          OCCUPY_SECRET_DIR: src/main/resources
          # OCCUPY_SECRET_TEST_DIR: src/test/resources
          OCCUPY_SECRET_DIR_FILE_NAME: application-secret.yml
      run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME
           # echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: Compile querydsl with Gradle
      run: ./gradlew compilequerydsl

    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDDTHHmm
        utcOffset: "+09:00"

    - name: Generate deployment package
      run: |
        mkdir -p deploy
        cp build/libs/moa-0.0.1-SNAPSHOT.jar deploy/moa-springboot-server-ebextensions-1.jar
        cp Procfile deploy/Procfile
        cp 00-set-timezone.config deploy/00-set-timezone.config
        cd deploy && zip -r moa-springboot-server-label-${{steps.current-time.outputs.formattedTime}}-${{github.sha}} .

    - name: Deploy Consumer to EB
      uses: einaregilsson/beanstalk-deploy@v14
      with:
         aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         application_name: moa-springboot-server
         environment_name: Moaspringbootserver-env
         version_label: moa-springboot-server-label-${{steps.current-time.outputs.formattedTime}}-${{github.sha}}
         region: ap-northeast-2
         deployment_package: deploy/moa-springboot-server-label-${{steps.current-time.outputs.formattedTime}}-${{github.sha}}.zip
